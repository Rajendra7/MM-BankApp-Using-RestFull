package com.moneymoneybank.app.service;

import java.time.LocalDateTime;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.moneymoneybank.app.entity.Transaction;
import com.moneymoneybank.app.entity.TransactionType;
import com.moneymoneybank.app.repo.TransactionRepository;

@Service
public class TransactionServiceImpl implements TransactionService {
	
	@Autowired
	private TransactionRepository repo;
	
	public Double withdraw(int accountNumber, double amount,double currentBalance,String TrasactionDetails) {
		
		Transaction transaction=new Transaction();
		transaction.setAccountNumber(accountNumber);
		transaction.setAmount(amount);
		transaction.setTransactionDate(LocalDateTime.now());
		transaction.setTransactionDetails(TrasactionDetails);
		transaction.setTransactionType(TransactionType.WITHDRAW);
		currentBalance=currentBalance-amount;
		transaction.setCurrentBalance(currentBalance);
		repo.save(transaction);
		return currentBalance;
	}

	public Double deposit(int accountNumber, double amount,double currentBalance,String TrasactionDetails) {
			
			Transaction transaction=new Transaction();
			transaction.setAccountNumber(accountNumber);
			transaction.setAmount(amount);
			transaction.setTransactionDate(LocalDateTime.now());
			transaction.setTransactionDetails(TrasactionDetails);
			transaction.setTransactionType(TransactionType.WITHDRAW);
			currentBalance=currentBalance+amount;
			transaction.setCurrentBalance(currentBalance);
			repo.save(transaction);
			return currentBalance;
		}
	
	public Double[] fundTransfer(int senderAccountNumber,int receiverAccountNumber, double amount,double currentBalance,String TrasactionDetails) {
	
		double senderBalance=withdraw(senderAccountNumber, amount, currentBalance, TrasactionDetails);
		double receiverBalance=deposit(receiverAccountNumber, amount, currentBalance, TrasactionDetails);
		
		return new Double[] {senderBalance,receiverBalance};
	}
	
	
	
	
}
